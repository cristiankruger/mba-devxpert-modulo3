// <auto-generated />
using System;
using DevXpert.Modulo3.ModuloFinanceiro.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevXpert.Modulo3.ModuloFinanceiro.Data.Migrations
{
    [DbContext(typeof(PagamentoContext))]
    partial class PagamentoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AI")
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DevXpert.Modulo3.ModuloFinanceiro.Business.Models.Pagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.HasKey("Id");

                    b.ToTable("Pagamentos", (string)null);
                });

            modelBuilder.Entity("DevXpert.Modulo3.ModuloFinanceiro.Business.Models.Transacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataTransacao")
                        .HasColumnType("DateTime")
                        .HasColumnName("DataTransacao");

                    b.Property<Guid>("PagamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StatusPagamento")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Valor");

                    b.HasKey("Id");

                    b.HasIndex("PagamentoId")
                        .IsUnique();

                    b.ToTable("Transacoes", (string)null);
                });

            modelBuilder.Entity("DevXpert.Modulo3.ModuloFinanceiro.Business.Models.Pagamento", b =>
                {
                    b.OwnsOne("DevXpert.Modulo3.ModuloFinanceiro.Business.Models.DadosCartao", "DadosCartao", b1 =>
                        {
                            b1.Property<Guid>("PagamentoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Cvv")
                                .IsRequired()
                                .HasColumnType("varchar(3)")
                                .HasColumnName("Cvv");

                            b1.Property<string>("DataValidade")
                                .IsRequired()
                                .HasColumnType("varchar(7)")
                                .HasColumnName("DataValidade");

                            b1.Property<string>("NomeCartao")
                                .IsRequired()
                                .HasColumnType("varchar(100)")
                                .HasColumnName("Titular");

                            b1.Property<string>("NumeroCartao")
                                .IsRequired()
                                .HasColumnType("varchar(20)")
                                .HasColumnName("NumeroCartao");

                            b1.HasKey("PagamentoId");

                            b1.ToTable("Pagamentos");

                            b1.WithOwner()
                                .HasForeignKey("PagamentoId");
                        });

                    b.Navigation("DadosCartao");
                });

            modelBuilder.Entity("DevXpert.Modulo3.ModuloFinanceiro.Business.Models.Transacao", b =>
                {
                    b.HasOne("DevXpert.Modulo3.ModuloFinanceiro.Business.Models.Pagamento", "Pagamento")
                        .WithOne("Transacao")
                        .HasForeignKey("DevXpert.Modulo3.ModuloFinanceiro.Business.Models.Transacao", "PagamentoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("DevXpert.Modulo3.ModuloFinanceiro.Business.Models.Pagamento", b =>
                {
                    b.Navigation("Transacao");
                });
#pragma warning restore 612, 618
        }
    }
}
